{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","res","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCM3BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCRDC,EAAU,mDAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAalB,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQlB,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCV3BK,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,4DAyFSC,EApFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAASS,QAEZ,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAgBMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aA2BhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASwB,IACvB,4BACGQ,EAAYE,KAAI,SAAA1C,GAAI,OACnB,kBAAC,EAAD,CAAM2C,IAAK3C,EAAKiB,GAAIjB,KAAMA,EAAMC,iBAAkB,kBA1B/B,SAACgB,GAC1B,IAAMjB,EAAO0B,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EACUlB,EAAI6B,GACXlC,MAAK,SAAAmC,GACNpB,EAASD,EAAMgB,KAAI,SAAA1C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO+C,SAEpDC,OAAM,SAAAC,GACLhB,EAAgB,aAAD,OACAjC,EAAKK,QADL,0CAGf6C,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAI,GAAC,OAAIA,EAAE5B,KAAOA,SAUwBkC,CAAmBnD,EAAKiB,WAGpF,6BACE,4BAAQX,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,0BAAMsB,SAzDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASuB,EACT4B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG7BzB,EACUoB,GACP3C,MAAK,SAAAmC,GACJpB,EAASD,EAAMmC,OAAOd,IACtBlB,EAAW,SA8CX,2BACEiC,MAAOlC,EACPmC,SA1CiB,SAACV,GACxBhB,QAAQC,IAAIe,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UA0CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCtFNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9c8cceab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'https://safe-shore-62235.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(res => res.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note App Created by Donald</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `the note '${note.content}' was already deleted from the server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n// import axios from 'axios'\n\n// axios\n//   .get('http://localhost:3001/notes')\n//   .then(response => {\n//     const notes = response.data\n//     console.log(notes)\n//   })\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}